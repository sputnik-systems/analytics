$date = CAST('{2}' as date);


SELECT
    COUNT(DISTINCT `intercom_uuid`) as `intercom_uuid_count`,
    COUNT(DISTINCT `installation_point_id_count`) AS installation_point_id_connected_count,

    COUNT(DISTINCT if(status = "Start",`intercom_uuid`)) AS all_intercoms_start_count,

    COUNT(DISTINCT if(status = "Start",`connected_intercoms`)) AS connected_intercoms_start_count,
    COUNT(DISTINCT if(status = "Start",`disconnected_intercoms`)) AS disconnected_intercoms_start_count,
    COUNT(DISTINCT if(status = "Start",`installation_point_id_count`)) AS installation_point_id_connected_count_start_sum,

    COUNT(DISTINCT if(status = "PRO",`intercom_uuid`)) AS all_intercoms_pro_count,
    COUNT(DISTINCT if(status = "PRO",`connected_intercoms`)) AS connected_intercoms_pro_count,
    COUNT(DISTINCT if(status = "PRO",`disconnected_intercoms`)) AS disconnected_intercoms_pro_count,

    COUNT(DISTINCT if(status = "PRO",`installation_point_id_count`)) AS installation_point_id_connected_count_pro_sum,

    COUNT(DISTINCT if(status = "Enterprise",`intercom_uuid`)) AS all_intercoms_enterprise_count,
    COUNT(DISTINCT if(status = "Enterprise",`connected_intercoms`)) AS connected_intercoms_enterprise_count,
    COUNT(DISTINCT if(status = "Enterprise",`disconnected_intercoms`)) AS disconnected_intercoms_enterprise_count,

    COUNT(DISTINCT if(status = "Enterprise",`installation_point_id_count`)) AS installation_point_id_connected_count_enterprise_sum
FROM
    (SELECT
        `report_date`,
        `company_name`, 
        `partner_lk`,
        `tin`,
        `pro_subs`,
        `enterprise_subs`,
        `status`,
        `billing_pro`,
        `partner_uuid`,
        `intercom_uuid`,
        `disconnected_intercoms`,
        `connected_intercoms`,
        `installation_point_id_count`,
        `installation_point_id_connected_count`, 
        count(`intercom_uuid`) OVER (partition by `partner_uuid`) AS count_intercom_uuid_by_partner

    FROM
        (SELECT
            intercoms.`report_date` as report_date, 
            `company_name`, 
            `partner_lk`,
            `tin`,
            `pro_subs`,
            `enterprise_subs`,
            CASE 
                WHEN `enterprise_subs` = 1 
                    or  intercoms.`partner_uuid` in
                        ("c4cea074-f4b6-47ba-af6c-97422bca530f",
                        "7775bc0f-24e5-4afc-9054-e194c847049b",
                        "f1f4d289-beb1-44ad-954b-42a8f02364e3",
                        "d950900f-ea1a-4c6e-90d2-fe83ebf8feac",
                        "7e8d1d57-bfe4-4775-82bd-92a671efc10c",
                        "a5b615c3-d849-431b-9bd3-e32e0712c923",
                        "32e110bb-41e6-4f7f-9e9b-8141ee3e31b7",
                        "ba308431-fd0c-4921-a605-9e21c52f8ac6",
                        "061a2bae-8f8f-4aa0-8c21-c30f9eb881e6",
                        "fc8899b7-cf9a-4687-9627-623507e13772")
                    THEN 'Enterprise' 
                WHEN `pro_subs` = 1 THEN 'PRO' 
                ELSE 'Start' 
            END AS `status`,
            `billing_pro`,
            companies.`partner_uuid` AS `partner_uuid`,
            intercoms.`intercom_uuid` AS `intercom_uuid`,
            IF((`intercoms`.`is_online` = 0 
                                AND CAST(DateTime::ToMicroseconds(CAST(`intercoms`.`report_date` AS DATETIME) 
                                - coalesce(`intercoms`.`disconnection_datetime`, 
                                CAST(`intercoms`.`report_date` AS DATETIME))) / 86400000000.0 AS DOUBLE) > 3
                                OR `intercoms`.`is_online` = 0 
                                AND `intercoms`.`disconnection_datetime` IS NULL 
                                AND `intercoms`.`connection_datetime` IS NULL), `intercoms`.`intercom_uuid`, NULL)
                                AS `disconnected_intercoms`,

            IF((`intercoms`.`is_online` = 1 
                                OR (`intercoms`.`is_online` = 0 
                                AND CAST(DateTime::ToMicroseconds(CAST(`intercoms`.`report_date` AS DATETIME) 
                                - coalesce(`intercoms`.`disconnection_datetime`, 
                                CAST(`intercoms`.`report_date` AS DATETIME))) / 86400000000.0 AS DOUBLE) <= 3 
                                AND `intercoms`.`connection_datetime` IS NOT NULL)), `intercoms`.`intercom_uuid`, NULL) 
                                AS `connected_intercoms`,

            `intercoms`.`installation_point_id` as `installation_point_id_count`,

            IF((`intercoms`.`installation_point_id` IS NOT NULL) 
                                OR (`intercoms`.`disconnection_datetime` IS NOT NULL 
                                OR `intercoms`.`connection_datetime` IS NOT NULL),`intercoms`.`intercom_uuid`)
                                as `installation_point_id_connected_count`

            FROM
                (SELECT
                    intercoms_st_asgard.`report_date`  as report_date,
                    intercoms_st_asgard.`intercom_uuid` as intercom_uuid,
                    intercoms_st_asgard.`is_online` as is_online,
                    MAX(DateTime::MakeDatetime(DateTime::ParseIso8601(`last_online`))) over (partition by intercoms_st_asgard.intercom_uuid ORDER by intercoms_st_asgard.report_date) as disconnection_datetime,
                    MAX(DateTime::MakeDatetime(DateTime::ParseIso8601(`last_offline`))) over (partition by intercoms_st_asgard.intercom_uuid ORDER by intercoms_st_asgard.report_date) as connection_datetime,
                    intercoms_st_asgard.`partner_uuid` as `partner_uuid`,
                    intercoms_st_partner.`installation_point_id` as installation_point_id
                FROM (SELECT * FROM `intercoms_st_asgard` 
                        WHERE year = DateTime::GetYear($date)
                        AND month = DateTime::GetMonth($date)) as `intercoms_st_asgard`
                LEFT JOIN (SELECT * FROM `intercoms_st_partner` 
                        WHERE year = DateTime::GetYear($date)
                        AND month = DateTime::GetMonth($date)) as `intercoms_st_partner`
                    ON intercoms_st_asgard.`intercom_uuid` = intercoms_st_partner.`intercom_uuid` 
                    AND intercoms_st_asgard.`report_date` = intercoms_st_partner.`report_date`
                    ) as intercoms
                LEFT JOIN
                    (SELECT
                        `report_date`,
                        companies_st.`partner_uuid` as `partner_uuid`,
                        `pro_subs`,
                        `enterprise_subs`,
                        `billing_pro`,
                        `is_blocked`,
                        `company_name`,
                        `partner_lk`,
                        `tin`,
                        `enterprise_not_paid`,
                        `enterprise_test`
                    FROM
                        (SELECT * FROM `companies_st_partner` 
                            WHERE year = DateTime::GetYear($date)
                            AND month = DateTime::GetMonth($date)) AS companies_st
                        LEFT JOIN `companies_dir_partner` using(partner_uuid)
                    ) AS companies 
                    ON intercoms.`partner_uuid` = companies.`partner_uuid` AND intercoms.`report_date` = companies.`report_date`      
            )
        WHERE report_date = $date   
        and `partner_uuid` not in 
                ('b1782e4f-9198-49d1-b5aa-7bdba9c87d21',
                '01e62154-20f3-4da5-a604-898837d07026',
                '5ade3d03-bb22-4949-bdb3-4487bb74c614',
                '71158d5e-acf9-442f-97eb-2734e262a3c3',
                '6d02e1a5-cc82-4002-b0e3-0d8ee13b453c',
                '2e521201-02bf-47e9-8e5c-e1cb5e210b6e',
                '95924db0-03ba-4ce5-9bfb-24acd59932f3',
                '4b87ac6d-6478-4bb2-b630-3d06abb8ef28',
                'fecd4132-1d4e-410f-b17b-0c7c31d7350e',
                'd3efacc6-8c92-4bac-beb7-03a77b1bc6d3',
                '72269b49-e10c-44a1-b3f4-a588893cd5da',
                '3759e965-ef59-44dd-973d-9defb789e1e2',
                'b3b9b143-a78d-4ad8-bb9f-06613c5db6fd',
                '3d369790-9565-43b9-9646-3ed63be84e8c',
                '59e2b308-bfc1-467e-b677-8b70b3edcaf3',
                '76075a43-5b8f-4b67-ac2b-23fd82abc26c',
                '5ce291d3-9672-4858-99fb-c42ff14b16b0',
                '115b2856-5719-4ea1-8119-075788962eb0',
                'a2c3cb55-8369-46f7-b091-04ef226f46dc',
                '573e40f8-86dc-4228-9301-477bbb8c0ed3',
                '3bbd7565-a843-4b0f-96fc-232df48baf75',
                'e4be161c-bd52-464e-8120-2815befdd23c')
    )

limit 10